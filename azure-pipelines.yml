# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7.15'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      pip install pytest 
      pip install pytest-cov
      python -m pytest --junitxml=junit/test-results.xml --cov=src --cov-report=xml --cov-report=html tests/unit 
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
  
  - script: |
      bash <(curl https://codecov.io/bash) -f coverage.xml -F adder -F subtractor
    env:
      CODECOV_TOKEN: $(codecov.token)
    displayName: 'codecov'  
  
  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: Cobertura
      summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
      reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'

  - task: SonarQubePrepare@4
    inputs:
      SonarQube: 'Codecov SonarQube'
      scannerMode: 'CLI'
      configMode: 'manual'
      cliProjectKey: '98adf9e9-ff43-4c23-9b59-928b8fa7cc3e'
      cliProjectName: 'codecov-assume-flag-test'
      cliSources: '.'
      # extraProperties: 'sonar.python.coverage.reportPaths=*coverage*.xml
      # sonar.python.xunit.reportPath=*test-results.xml'
  - task: SonarQubeAnalyze@4
  - task: SonarQubePublish@4
    inputs:
      pollingTimeoutSec: '300'

- job: 'Publish'
  dependsOn: 'Test'
  pool:
    vmImage: 'Ubuntu-16.04'
